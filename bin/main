#!/usr/bin/env ruby

# board that stores the result
board = ['', '', '', '', '', '', '', '', '']

def welcome()
  puts ' '
  puts '|    | |=== |    |===   ===  |\  /| |=== '
  puts '| /\ | |=== |    |     |   | | \/ | |=== '
  puts '|/  \| |=== |=== |===   ===  |    | |=== '
  puts ' '
  puts ' '
end
welcome

# we need to display the bord to the user
puts 'Welcome to the tic tac toe game'
def show_board(board)
  puts "       #{board[0]}  | #{board[1]} | #{board[2]}        "
  puts "      **********      "
  puts "       #{board[3]}  | #{board[4]} | #{board[5]}        "
  puts "      **********      "
  puts "       #{board[6]}  | #{board[7]} | #{board[8]}        "
end

show_board(board)

def valid_name?(name)
  return true if name.is_a?(String) && !name.empty?

  false
end

puts 'Please press any key to play'
gets.chomp

# Instantiating the player
puts 'Player_1 Name: '
player_one = gets.chomp
puts "#{player_one} is Player_one with Token \"X\" " if valid_name?(player_one)
puts ' '
puts 'player_2 Name: '
player_two = gets.chomp
puts "#{player_two} is Player_two with Token \"O\" " if valid_name?(player_two)

puts "\n \n"

players= [
  { 'name' => [player_one],
    'token' => 'X' },
  { 'name' => [player_two],
    'token' => 'O' }
]

# puts 'Please choose a position to play!!!'
def choose_position()
  puts ' 1 | 2 | 3 '
  puts '***********'
  puts ' 4 | 5 | 6 '
  puts '***********'
  puts ' 7 | 8 | 9 '

  puts "\n \n"
end
def win?(board, token)
  factor = proc { |item| item == token }
  combinations = [board[0..2], board[3..5], board[6..8], [board[0], board[3], board[6]], [board[1], board[4], board[7]], [board[2], board[5], board[8]], [board[0], board[4], board[8]], [board[2], board[4], board[6]],]
  return true if combinations.any? { |value| value.all?(&factor) }

  false
end

# Congratulate  a winner
def congratulate(player)
  puts "#{player} is the winner!!!"
  puts '     |    |  |  |\  |  |\  |  |===   ++++ '
  puts '     | /\ |  |  | \ |  | * |  |===   + \+ '
  puts '     |/  \|  |  |  \|  |  \|  |===   *  \ '
end

def draw_game(turns, state_of_game)
  puts "It's a draw" if turns == 9 && state_of_game
  false
end

def position_taken?(board, indx)
  if board[indx] == 'X' || board[indx] == 'O'
    true
  else
    false
  end
end

# Players making turns
def play(board, players)
  game_on = true
  turn = 0
  player = players[0]['name']

  while game_on && turn < 10
    puts "Turn #{turn + 1}"
    if player == players[0]['name']
      puts "#{player} please choose you position in the board"
      puts "\n \n"
      choose_position
      puts "\n \n"

      puts 'Position:'
      play = gets.chomp

      while play
        puts !position_taken?(board, play.to_i - 1)
        puts play.to_i.between?(1, 9)
        puts play.to_i.class == Integer

        if play.to_i.class == Integer and play.to_i.between?(1, 9) and !position_taken?(board, play.to_i - 1)
          play
          break
        else
          puts "INVALID POSITION PLASE CHOOSE A POSITION BETWEEN 1 TO 9"
          play = gets.chomp()
        end

              end
      board[play.to_i - 1] = players[0]['token']

      game_on = false if win?(board, players[0]['token'])
      player = players[1]['name'] if game_on
      turn += 1
      puts "Turn #{turn + 1}"
      puts 'Current results on the table'
      puts "\n \n"
      show_board(board)
    elsif player == players[1]['name']
      puts "#{player} please choose you position in the board"
      puts "\n \n"
      choose_position
      puts "\n \n"
      puts 'Position:'
      play = gets.chomp
      while play
        if play.to_i.class == Integer and play.to_i.between?(1, 9) and !position_taken?(board, play.to_i - 1)
          play
          break
        else
          puts "INVALID POSITION PLEASE CHOOSE A POSITION BETWEEN 1 TO 9"
          play = gets.chomp
        end
              end
      board[play.to_i - 1] = players[1]['token']
      game_on = false if win?(board, players[1]['token'])

      player = players[0]['name'] if game_on
      turn += 1
      puts "Turn #{turn + 1}"
      puts 'Current results on the table'
      puts "\n \n"
      show_board(board)

    end
    if turn >= 5 && win?(board, (players[1]['token'] || players[0]['token']))
      congratulate(player)
      break
    elsif turn == 9 && !win?(board, (players[1]['token'] || players[0]['token']))
      draw_game(turn, game_on)
      break
    end
  end
  p board
end

play(board,players)
puts " \n \n"

puts 'this is where the players make a move in turns'

puts 'There are Eight possible winning combinations:'
puts 'TOP ROW, MIDDLE ROW, BOTTOM ROW, FIRST_COLUMN, SECOND_COLUMN, THIRD COLUMN, AND THE DIAGONALS '
puts 'The Draw/Tie occurs when the entire board is filled with both X and O and'
puts 'yet no winning combinations can be found'

puts " \n \n"

# make a move
# how to detemine the fate of the game
# reset when the game is over
# validate moves
# get user inputs

# blank out the position that is already played

# choose_position


# when the first wins theres no winning message
# Repetition on the while loop